{
  "classes": {
    "Directory": {
      "name": "Directory",
      "filename": "src/directory.coffee",
      "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.3.5/src/directory.coffee#L14",
      "sections": [
        {
          "name": "Construction",
          "description": ""
        },
        {
          "name": "Event Subscription",
          "description": ""
        },
        {
          "name": "Directory Metadata",
          "description": ""
        },
        {
          "name": "Managing Paths",
          "description": ""
        },
        {
          "name": "Traversing",
          "description": ""
        }
      ],
      "classMethods": [],
      "instanceMethods": [
        {
          "name": "constructor",
          "sectionName": "Construction",
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.3.5/src/directory.coffee#L29",
          "visibility": "Public",
          "summary": "Configures a new Directory instance, no files are accessed.",
          "description": "Configures a new Directory instance, no files are accessed.",
          "arguments": [
            {
              "name": "directoryPath",
              "description": "A {String} containing the absolute path to the directory",
              "type": "String",
              "isOptional": false
            },
            {
              "name": "symlink",
              "description": "A {Boolean} indicating if the path is a symlink. (default: false) ",
              "type": "Boolean",
              "isOptional": true
            }
          ]
        },
        {
          "name": "onDidChange",
          "sectionName": "Event Subscription",
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.3.5/src/directory.coffee#L53",
          "visibility": "Public",
          "summary": "Invoke the given callback when the directory's contents change.",
          "description": "Invoke the given callback when the directory's contents change.",
          "arguments": [
            {
              "name": "callback",
              "description": "{Function} to be called when the directory's contents change.",
              "type": "Function",
              "isOptional": false
            }
          ],
          "returnValues": [
            {
              "type": "Disposable",
              "description": "Returns a {Disposable} on which `.dispose()` can be called to unsubscribe."
            }
          ]
        },
        {
          "name": "isFile",
          "sectionName": "Directory Metadata",
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.3.5/src/directory.coffee#L81",
          "visibility": "Public",
          "summary": "",
          "description": "",
          "returnValues": [
            {
              "type": "Boolean",
              "description": "Returns a {Boolean}, always false."
            }
          ]
        },
        {
          "name": "isDirectory",
          "sectionName": "Directory Metadata",
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.3.5/src/directory.coffee#L84",
          "visibility": "Public",
          "summary": "",
          "description": "",
          "returnValues": [
            {
              "type": "Boolean",
              "description": "Returns a {Boolean}, always true."
            }
          ]
        },
        {
          "name": "isRoot",
          "sectionName": "Directory Metadata",
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.3.5/src/directory.coffee#L88",
          "visibility": "Public",
          "summary": "Return a {Boolean}, true if this {Directory} is the root directory\nof the filesystem, or false if it isn't. ",
          "description": "Return a {Boolean}, true if this {Directory} is the root directory\nof the filesystem, or false if it isn't. "
        },
        {
          "name": "getPath",
          "sectionName": "Managing Paths",
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.3.5/src/directory.coffee#L99",
          "visibility": "Public",
          "summary": "",
          "description": "\n\nThis may include unfollowed symlinks or relative directory entries. Or it\nmay be fully resolved, it depends on what you give it. ",
          "returnValues": [
            {
              "type": "String",
              "description": "Returns the directory's {String} path."
            }
          ]
        },
        {
          "name": "getRealPathSync",
          "sectionName": "Managing Paths",
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.3.5/src/directory.coffee#L105",
          "visibility": "Public",
          "summary": "",
          "description": "\n\nAll relative directory entries are removed and symlinks are resolved to\ntheir final destination. ",
          "returnValues": [
            {
              "type": "String",
              "description": "Returns this directory's completely resolved {String} path."
            }
          ]
        },
        {
          "name": "getBaseName",
          "sectionName": "Managing Paths",
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.3.5/src/directory.coffee#L116",
          "visibility": "Public",
          "summary": "",
          "description": "",
          "returnValues": [
            {
              "type": "String",
              "description": "Returns the {String} basename of the directory."
            }
          ]
        },
        {
          "name": "relativize",
          "sectionName": "Managing Paths",
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.3.5/src/directory.coffee#L121",
          "visibility": "Public",
          "summary": "",
          "description": "",
          "returnValues": [
            {
              "type": "String",
              "description": "Returns the relative {String} path to the given path from this\ndirectory."
            }
          ]
        },
        {
          "name": "getParent",
          "sectionName": "Traversing",
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.3.5/src/directory.coffee#L160",
          "visibility": "Public",
          "summary": "Traverse to the parent directory.",
          "description": "Traverse to the parent directory.",
          "returnValues": [
            {
              "type": "Directory",
              "description": "Returns a {Directory}."
            }
          ]
        },
        {
          "name": "getFile",
          "sectionName": "Traversing",
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.3.5/src/directory.coffee#L169",
          "visibility": "Public",
          "summary": "Traverse within this Directory to a child File. This method doesn't\nactually check to see if the File exists, it just creates the File object.",
          "description": "Traverse within this Directory to a child File. This method doesn't\nactually check to see if the File exists, it just creates the File object.",
          "arguments": [
            {
              "name": "filename",
              "description": "The {String} name of a File within this Directory.",
              "type": "String",
              "isOptional": false
            }
          ],
          "returnValues": [
            {
              "type": "File",
              "description": "Returns a {File}."
            }
          ]
        },
        {
          "name": "getSubdirectory",
          "sectionName": "Traversing",
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.3.5/src/directory.coffee#L179",
          "visibility": "Public",
          "summary": "Traverse within this a Directory to a child Directory. This method\ndoesn't actually check to see if the Directory exists, it just creates the\nDirectory object.",
          "description": "Traverse within this a Directory to a child Directory. This method\ndoesn't actually check to see if the Directory exists, it just creates the\nDirectory object.",
          "arguments": [
            {
              "name": "dirname",
              "description": "The {String} name of the child Directory.",
              "type": "String",
              "isOptional": false
            }
          ],
          "returnValues": [
            {
              "type": "Directory",
              "description": "Returns a {Directory}."
            }
          ]
        },
        {
          "name": "getEntriesSync",
          "sectionName": "Traversing",
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.3.5/src/directory.coffee#L185",
          "visibility": "Public",
          "summary": "Reads file entries in this directory from disk synchronously.",
          "description": "Reads file entries in this directory from disk synchronously.",
          "returnValues": [
            {
              "type": "Array",
              "description": "Returns an {Array} of {File} and {Directory} objects."
            }
          ]
        },
        {
          "name": "getEntries",
          "sectionName": "Traversing",
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.3.5/src/directory.coffee#L206",
          "visibility": "Public",
          "summary": "Reads file entries in this directory from disk asynchronously.",
          "description": "Reads file entries in this directory from disk asynchronously.",
          "arguments": [
            {
              "children": [
                {
                  "name": "error",
                  "description": "An {Error}, may be null.",
                  "type": "Error",
                  "isOptional": false
                },
                {
                  "name": "entries",
                  "description": "An {Array} of {File} and {Directory} objects. ",
                  "type": "Array",
                  "isOptional": false
                }
              ],
              "name": "callback",
              "description": "A {Function} to call with the following arguments:",
              "type": "Function",
              "isOptional": false
            }
          ]
        },
        {
          "name": "contains",
          "sectionName": "Traversing",
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.3.5/src/directory.coffee#L233",
          "visibility": "Public",
          "summary": "",
          "description": "",
          "returnValues": [
            {
              "type": null,
              "description": "Returns whether the given path (real or symbolic) is inside this\ndirectory. This method does not actually check if the path exists, it just\nchecks if the path is under this directory."
            }
          ]
        }
      ],
      "classProperties": [],
      "instanceProperties": [],
      "visibility": "Extended",
      "summary": "Represents a directory on disk that can be watched for changes. ",
      "description": "Represents a directory on disk that can be watched for changes. "
    },
    "File": {
      "name": "File",
      "filename": "src/file.coffee",
      "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.3.5/src/file.coffee#L20",
      "sections": [
        {
          "name": "Construction",
          "description": ""
        },
        {
          "name": "Event Subscription",
          "description": ""
        },
        {
          "name": "File Metadata",
          "description": ""
        },
        {
          "name": "Managing Paths",
          "description": ""
        },
        {
          "name": "Traversing",
          "description": ""
        },
        {
          "name": "Reading and Writing",
          "description": ""
        }
      ],
      "classMethods": [],
      "instanceMethods": [
        {
          "name": "constructor",
          "sectionName": "Construction",
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.3.5/src/file.coffee#L35",
          "visibility": "Public",
          "summary": "Creates a new file.",
          "description": "Creates a new file.",
          "arguments": [
            {
              "name": "filePath",
              "description": "A {String} containing the absolute path to the file",
              "type": "String",
              "isOptional": false
            },
            {
              "name": "symlink",
              "description": "A {Boolean} indicating if the path is a symlink (default: false). ",
              "type": "Boolean",
              "isOptional": false
            }
          ]
        },
        {
          "name": "onDidChange",
          "sectionName": "Event Subscription",
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.3.5/src/file.coffee#L71",
          "visibility": "Public",
          "summary": "Invoke the given callback when the file's contents change.",
          "description": "Invoke the given callback when the file's contents change.",
          "arguments": [
            {
              "name": "callback",
              "description": "{Function} to be called when the file's contents change.",
              "type": "Function",
              "isOptional": false
            }
          ],
          "returnValues": [
            {
              "type": "Disposable",
              "description": "Returns a {Disposable} on which `.dispose()` can be called to unsubscribe."
            }
          ]
        },
        {
          "name": "onDidRename",
          "sectionName": "Event Subscription",
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.3.5/src/file.coffee#L80",
          "visibility": "Public",
          "summary": "Invoke the given callback when the file's path changes.",
          "description": "Invoke the given callback when the file's path changes.",
          "arguments": [
            {
              "name": "callback",
              "description": "{Function} to be called when the file's path changes.",
              "type": "Function",
              "isOptional": false
            }
          ],
          "returnValues": [
            {
              "type": "Disposable",
              "description": "Returns a {Disposable} on which `.dispose()` can be called to unsubscribe."
            }
          ]
        },
        {
          "name": "onDidDelete",
          "sectionName": "Event Subscription",
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.3.5/src/file.coffee#L89",
          "visibility": "Public",
          "summary": "Invoke the given callback when the file is deleted.",
          "description": "Invoke the given callback when the file is deleted.",
          "arguments": [
            {
              "name": "callback",
              "description": "{Function} to be called when the file is deleted.",
              "type": "Function",
              "isOptional": false
            }
          ],
          "returnValues": [
            {
              "type": "Disposable",
              "description": "Returns a {Disposable} on which `.dispose()` can be called to unsubscribe."
            }
          ]
        },
        {
          "name": "isFile",
          "sectionName": "File Metadata",
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.3.5/src/file.coffee#L111",
          "visibility": "Public",
          "summary": "",
          "description": "",
          "returnValues": [
            {
              "type": "Boolean",
              "description": "Returns a {Boolean}, always true."
            }
          ]
        },
        {
          "name": "isDirectory",
          "sectionName": "File Metadata",
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.3.5/src/file.coffee#L114",
          "visibility": "Public",
          "summary": "",
          "description": "",
          "returnValues": [
            {
              "type": "Boolean",
              "description": "Returns a {Boolean}, always false."
            }
          ]
        },
        {
          "name": "exists",
          "sectionName": "File Metadata",
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.3.5/src/file.coffee#L117",
          "visibility": "Public",
          "summary": "",
          "description": "",
          "returnValues": [
            {
              "type": "Boolean",
              "description": "Returns a {Boolean}, true if the file exists, false otherwise."
            }
          ]
        },
        {
          "name": "getDigest",
          "sectionName": "File Metadata",
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.3.5/src/file.coffee#L123",
          "visibility": "Public",
          "summary": "Get the SHA-1 digest of this file",
          "description": "Get the SHA-1 digest of this file",
          "returnValues": [
            {
              "type": "String",
              "description": "Returns a {String}."
            }
          ]
        },
        {
          "name": "setEncoding",
          "sectionName": "File Metadata",
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.3.5/src/file.coffee#L132",
          "visibility": "Public",
          "summary": "Sets the file's character set encoding name.",
          "description": "Sets the file's character set encoding name.",
          "arguments": [
            {
              "name": "encoding",
              "description": "The {String} encoding to use (default: 'utf8') ",
              "type": "String",
              "isOptional": false
            }
          ]
        },
        {
          "name": "getEncoding",
          "sectionName": "File Metadata",
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.3.5/src/file.coffee#L135",
          "visibility": "Public",
          "summary": "",
          "description": "",
          "returnValues": [
            {
              "type": "String",
              "description": "Returns the {String} encoding name for this file (default: 'utf8')."
            }
          ]
        },
        {
          "name": "getPath",
          "sectionName": "Managing Paths",
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.3.5/src/file.coffee#L142",
          "visibility": "Public",
          "summary": "",
          "description": "",
          "returnValues": [
            {
              "type": "String",
              "description": "Returns the {String} path for the file."
            }
          ]
        },
        {
          "name": "getRealPathSync",
          "sectionName": "Managing Paths",
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.3.5/src/file.coffee#L149",
          "visibility": "Public",
          "summary": "",
          "description": "",
          "returnValues": [
            {
              "type": "String",
              "description": "Returns this file's completely resolved {String} path."
            }
          ]
        },
        {
          "name": "getBaseName",
          "sectionName": "Managing Paths",
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.3.5/src/file.coffee#L158",
          "visibility": "Public",
          "summary": "Return the {String} filename without any directory information. ",
          "description": "Return the {String} filename without any directory information. "
        },
        {
          "name": "getParent",
          "sectionName": "Traversing",
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.3.5/src/file.coffee#L166",
          "visibility": "Public",
          "summary": "Return the {Directory} that contains this file. ",
          "description": "Return the {Directory} that contains this file. "
        },
        {
          "name": "read",
          "sectionName": "Reading and Writing",
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.3.5/src/file.coffee#L202",
          "visibility": "Public",
          "summary": "Reads the contents of the file.",
          "description": "Reads the contents of the file.",
          "arguments": [
            {
              "name": "flushCache",
              "description": "A {Boolean} indicating whether to require a direct read or if a cached copy is acceptable.",
              "type": "Boolean",
              "isOptional": false
            }
          ],
          "returnValues": [
            {
              "type": null,
              "description": "Returns a promise that resovles to a String."
            }
          ]
        },
        {
          "name": "write",
          "sectionName": "Reading and Writing",
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.3.5/src/file.coffee#L242",
          "visibility": "Public",
          "summary": "Overwrites the file with the given text.",
          "description": "Overwrites the file with the given text.\n\nReturn undefined. ",
          "arguments": [
            {
              "name": "text",
              "description": "The {String} text to write to the underlying file.",
              "type": "String",
              "isOptional": false
            }
          ]
        }
      ],
      "classProperties": [],
      "instanceProperties": [],
      "visibility": "Extended",
      "summary": "Represents an individual file that can be watched, read from, and\nwritten to. ",
      "description": "Represents an individual file that can be watched, read from, and\nwritten to. "
    }
  }
}