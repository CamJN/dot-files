{
  "main": "./lib/main.js",
  "name": "pathwatcher",
  "description": "Watch files and directories for changes",
  "version": "2.3.5",
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/atom/node-pathwatcher/raw/master/LICENSE.md"
    }
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/atom/node-pathwatcher.git"
  },
  "bugs": {
    "url": "https://github.com/atom/node-pathwatcher/issues"
  },
  "homepage": "http://atom.github.io/node-pathwatcher",
  "scripts": {
    "prepublish": "grunt prepublish",
    "test": "grunt test",
    "install": "node-gyp rebuild"
  },
  "devDependencies": {
    "grunt": "~0.4.1",
    "grunt-contrib-coffee": "~0.9.0",
    "grunt-cli": "~0.1.7",
    "grunt-shell": "~0.2.2",
    "jasmine-tagged": "^1.1",
    "rimraf": "~2.2.0",
    "node-cpplint": "~0.1.5",
    "grunt-coffeelint": "git+https://github.com/atom/grunt-coffeelint.git",
    "temp": "~0.7.0",
    "grunt-atomdoc": "^1.0"
  },
  "dependencies": {
    "async": "~0.2.10",
    "emissary": "^1.1.0",
    "event-kit": "^0.6.0",
    "fs-plus": "^2.1",
    "grim": "^0.12.0",
    "iconv-lite": "~0.4.4",
    "nan": "1.2.0",
    "q": "~1.0.1",
    "runas": "^1.0.1",
    "underscore-plus": "~1.x"
  },
  "gypfile": true,
  "readme": "# Path Watcher Node Module [![Build Status](https://travis-ci.org/atom/node-pathwatcher.svg?branch=master)](https://travis-ci.org/atom/node-pathwatcher)\n\n## Installing\n\n```bash\nnpm install pathwatcher\n```\n\n## Building\n\n  * Clone the repository\n  * Run `npm install` to install the dependencies\n  * Run `npm test` to run the specs\n\n## Using\n\n```coffeescript\nPathWatcher = require 'pathwatcher'\n```\n\n### PathWatcher.watch(filename, [listener])\n\nWatch for changes on `filename`, where `filename` is either a file or a\ndirectory. The returned object is a PathWatcher.\n\nThe listener callback gets two arguments `(event, path)`. `event` is 'rename',\n'delete' or 'change', and `path` is the path of the file which triggered the\nevent.\n\nFor directories, the 'change' event is emitted when a file or directory under\nthe watched directory got created or deleted. And the `PathWatcher.watch` is\nnot recursive, so changes of subdirectories under the watched directory would\nnot be detected.\n\n### PathWatcher.close()\n\nStop watching for changes on the given `PathWatcher`.\n",
  "readmeFilename": "README.md",
  "_id": "pathwatcher@2.3.5",
  "dist": {
    "shasum": "8374994a7d2cc2b7c85fba1adca6de0879e80e11"
  },
  "_from": "pathwatcher@~2.3.2",
  "_resolved": "https://registry.npmjs.org/pathwatcher/-/pathwatcher-2.3.5.tgz"
}
