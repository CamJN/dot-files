[{"diskText":"source 'https://rubygems.org'\n\n\n# Bundle edge Rails instead: gem 'rails', github: 'rails/rails'\ngem 'rails', '>= 4.2.0.beta4'\n# Use sqlite3 as the database for Active Record\ngem 'pg', '>= 0.17.1'\n# Use SCSS for stylesheets\ngem 'sass-rails', '>= 5.0.0.beta1'\n# Use Uglifier as compressor for JavaScript assets\ngem 'uglifier', '>= 2.5.3'\n# Use CoffeeScript for .js.coffee assets and views\ngem 'coffee-rails', '>= 4.1.0'\n# Use jQuery as the JavaScript library\ngem 'jquery-rails', '>= 4.0.0.beta2'\n# Turbolinks makes following links in your web application faster. Read more: https://github.com/rails/turbolinks\ngem 'turbolinks', '>= 2.5.1'\n# Use ActiveModel has_secure_password\ngem 'bcrypt', '>= 3.1.9'\n# Use Friendly Id for SEO-URLs\ngem 'friendly_id', '>= 5.0.4'\n# Use Devise for authentication\ngem 'devise', '>= 3.4.1'\n#use CanCanCan for authorization\ngem 'cancancan', '>= 1.9.2'\n\n# Use Rails-Admin for administration\ngem 'rails_admin', :git => 'git://github.com/sferik/rails_admin.git'\n\ngroup :development, :test do\n  # Call 'debugger' anywhere in the code to stop execution and get a debugger console\n  gem 'byebug', '>=  3.5.1'\n\n  # Access an IRB console on exception pages or by using <%= console %> in views\n  gem 'web-console', '>= 2.0.0.beta4'\n\n  # Spring speeds up development by keeping your application running in the background. Read more: https://github.com/rails/spring\n  gem 'spring', '>= 1.1.3'\n\n  #gem 'coffee-rails-source-maps', '>= 1.4.0'\n  #gem 'sass-rails-source-maps', git: 'https://github.com/vhyza/sass-rails-source-maps.git', branch: 'sass-rails-5.0.0.beta1'\n\n  gem 'brakeman', :require => false\nend\n","text":"source 'https://rubygems.org'\n\n\n# Bundle edge Rails instead: gem 'rails', github: 'rails/rails'\ngem 'rails', '>= 4.2.0.beta4'\n# Use sqlite3 as the database for Active Record\ngem 'pg', '>= 0.17.1'\n# Use SCSS for stylesheets\ngem 'sass-rails', '>= 5.0.0.beta1'\n# Use Uglifier as compressor for JavaScript assets\ngem 'uglifier', '>= 2.5.3'\n# Use CoffeeScript for .js.coffee assets and views\ngem 'coffee-rails', '>= 4.1.0'\n# Use jQuery as the JavaScript library\ngem 'jquery-rails', '>= 4.0.0.beta2'\n# Turbolinks makes following links in your web application faster. Read more: https://github.com/rails/turbolinks\ngem 'turbolinks', '>= 2.5.1'\n# Use ActiveModel has_secure_password\ngem 'bcrypt', '>= 3.1.9'\n# Use Friendly Id for SEO-URLs\ngem 'friendly_id', '>= 5.0.4'\n# Use Devise for authentication\ngem 'devise', '>= 3.4.1'\n#use CanCanCan for authorization\ngem 'cancancan', '>= 1.9.2'\n\n# Use Rails-Admin for administration\ngem 'rails_admin', :git => 'git://github.com/sferik/rails_admin.git'\n\ngroup :development, :test do\n  # Call 'debugger' anywhere in the code to stop execution and get a debugger console\n  gem 'byebug', '>=  3.5.1'\n\n  # Access an IRB console on exception pages or by using <%= console %> in views\n  gem 'web-console', '>= 2.0.0.beta4'\n\n  # Spring speeds up development by keeping your application running in the background. Read more: https://github.com/rails/spring\n  gem 'spring', '>= 1.1.3'\n\n  #gem 'coffee-rails-source-maps', '>= 1.4.0'\n  #gem 'sass-rails-source-maps', git: 'https://github.com/vhyza/sass-rails-source-maps.git', branch: 'sass-rails-5.0.0.beta1'\n\n  gem 'brakeman', :require => false\nend\n","active":false,"path":"/Users/camdennarzt/Developer/Ruby/KingOfStrain/Gemfile","scroll":2,"cursor":{"row":39,"column":3}},{"diskText":"class User < ActiveRecord::Base\n  # Include default devise modules. Others available are:\n  # :omniauthable, :rememberable\n  # not :reconfirmable despite evidence to the contrary in the migration\n  devise :database_authenticatable, :registerable,\n         :confirmable, :lockable, :timeoutable,\n         :recoverable, :trackable, :validatable\n  enum role: [:registered, :admin, :banned, :guest]\n  before_create :set_default_role\n  has_many :scores, dependent: :destroy\n\n  attr_writer :login\n\n  def login\n    @login || self.username || self.email\n  end\n\n  validates :name, presence: true, length: {minimum: 1, maximum: 255}\n  validates :email, presence: true, confirmation: true, uniqueness: { case_sensitive: false  },\n                    length: {minimum: 3, maximum: 255}, format: { with: /\\A[^@]+@[^@]+\\z/ }\n  validates :username, presence: true, uniqueness: true, length: {minimum: 1, maximum: 255}\n  validates_format_of :password, allow_nil: true, with: /\\A(?=.*[[:lower:]])(?=.*[[:upper:]])(?=.*[[:digit:]])(?=.*[^[:alnum:][:space:]]).*\\z/, message: 'must contain an uppercase, lowercase, digit, and symbol'\n\n  def self.find_first_by_auth_conditions(warden_conditions)\n      conditions = warden_conditions.dup\n      if login = conditions.delete(:login)\n        where(conditions).where([\"username = :value OR lower(email) = lower(:value)\", { value: login }]).first\n      else\n        where(conditions).first\n      end\n  end\n\n  private\n  def set_default_role\n    self.role ||= :registered\n  end\nend\n","text":"class User < ActiveRecord::Base\n  # Include default devise modules. Others available are:\n  # :omniauthable, :rememberable\n  # not :reconfirmable despite evidence to the contrary in the migration\n  devise :database_authenticatable, :registerable,\n         :confirmable, :lockable, :timeoutable,\n         :recoverable, :trackable, :validatable\n  enum role: [:registered, :admin, :banned, :guest]\n  before_create :set_default_role\n  has_many :scores, dependent: :destroy\n\n  attr_writer :login\n\n  def login\n    @login || self.username || self.email\n  end\n\n  validates :name, presence: true, length: {minimum: 1, maximum: 255}\n  validates :email, presence: true, confirmation: true, uniqueness: { case_sensitive: false  },\n                    length: {minimum: 3, maximum: 255}, format: { with: /\\A[^@]+@[^@]+\\z/ }\n  validates :username, presence: true, uniqueness: true, length: {minimum: 1, maximum: 255}\n  validates_format_of :password, allow_nil: true, with: /\\A(?=.*[[:lower:]])(?=.*[[:upper:]])(?=.*[[:digit:]])(?=.*[^[:alnum:][:space:]]).*\\z/, message: 'must contain an uppercase, lowercase, digit, and symbol'\n\n  def self.find_first_by_auth_conditions(warden_conditions)\n      conditions = warden_conditions.dup\n      if login = conditions.delete(:login)\n        where(conditions).where([\"username = :value OR lower(email) = lower(:value)\", { value: login }]).first\n      else\n        where(conditions).first\n      end\n  end\n\n  private\n  def set_default_role\n    self.role ||= :registered\n  end\nend\n","active":false,"path":"/Users/camdennarzt/Developer/Ruby/KingOfStrain/app/models/user.rb","scroll":2,"cursor":{"row":0,"column":0}}]