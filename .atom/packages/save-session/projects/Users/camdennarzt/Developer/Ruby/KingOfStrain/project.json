[{"diskText":"class ScoresController < ApplicationController\n  before_filter :authenticate_user!, except: [:index, :show]\n  def index\n      @scores = Score.all\n  end\nend\n","text":"class ScoresController < ApplicationController\n  before_filter :authenticate_user!, except: [:index, :show]\n  def index\n      @scores = Score.all\n  end\nend\n","active":false,"path":"/Users/camdennarzt/Developer/Ruby/KingOfStrain/app/controllers/scores_controller.rb","scroll":2,"cursor":{"row":0,"column":0}},{"diskText":"class EventsController < ApplicationController\n  before_action :authenticate_user!, except: [:index, :show, :latest]\n\n  def latest\n    @event = Event.order(:start).last\n  end\n\n  def index\n    @events = Event.all\n  end\n\n  def show\n    @event = Event.friendly.find(params[:id])\n  end\n\nend\n","text":"class EventsController < ApplicationController\n  before_action :authenticate_user!, except: [:index, :show, :latest]\n\n  def latest\n    @event = Event.order(:start).last\n  end\n\n  def index\n    @events = Event.all\n  end\n\n  def show\n    @event = Event.friendly.find(params[:id])\n  end\n\nend\n","active":false,"path":"/Users/camdennarzt/Developer/Ruby/KingOfStrain/app/controllers/events_controller.rb","scroll":2,"cursor":{"row":0,"column":0}},{"diskText":"class ApplicationController < ActionController::Base\n  # Prevent CSRF attacks by raising an exception.\n  # For APIs, you may want to use :null_session instead.\n  protect_from_forgery with: :exception\n  before_action :detect_browser_os_and_device\n  before_filter :configure_permitted_parameters, if: :devise_controller?\n\n  protected\n\n  def configure_permitted_parameters\n    devise_parameter_sanitizer.for(:sign_up) { |u| u.permit(:username, :email, :password, :password_confirmation) }\n    devise_parameter_sanitizer.for(:sign_in) { |u| u.permit(:login, :username, :email, :password) }\n    devise_parameter_sanitizer.for(:account_update) { |u| u.permit(:username, :email, :password, :password_confirmation, :current_password) }\n  end\n\n  private\n\n  def detect_browser_os_and_device\n      case request.protocol\n      when /http/i\n        request.variant = [:http]\n      when /https/i\n        request.variant = [:https]\n      end\n\n      case request.user_agent\n      when /iPad/i\n        request.variant.push(:tablet)\n      when /iPhone/i || /Windows Phone/i\n        request.variant.push(:phone)\n      when /Android/i && /mobile/i\n        request.variant.push(:phone)\n      when /Android/i\n        request.variant.push(:tablet)\n      end\n      case request.user_agent\n      when /Android/i\n        request.variant.push(:android)\n      when /iPhone/i || /iPad/i\n        request.variant.push(:ios)\n      when /Windows/i\n        request.variant.push(:windows)\n      when /Macintosh/i || /MacOS/i || /Darwin/i\n        request.variant.push(:mac)\n      when /BSD/i\n        request.variant.push(:bsd)\n      when /Linux/i || /Ubuntu/i\n        request.variant.push(:linux)\n      when /RIM/i || /Playbook/i || /BlackBerry/i || /BB10/i\n        request.variant.push(:blackberry)\n      when /CrOS/i\n        request.variant.push(:chromeos)\n      when /Firefox/i && /Mobile/i\n        request.variant.push(:firefoxos)\n      end\n      case request.user_agent\n      when /Chrome/i || /Chromium/i || /CrMo/i || /CriOS/i\n        request.variant.push(:chrome)\n      when /Firefox/i || /Fennec/i\n        request.variant.push(:firefox)\n      when /Safari/i && /Android/i\n        request.variant.push(:androidb)\n      when /Opera/i || /OPR/i || /Presto/i\n        request.variant.push(:opera)\n      when /MSIE/i || /Trident/i || /IE/i || /IEMobile/i\n        request.variant.push(:ie)\n      when /Safari/i || /iPhone/i || /iPad/i\n        request.variant.push(:safari)\n      when /RIM/i || /Playbook/i || /BlackBerry/i || /BB10/i\n        request.variant.push(:blackberryb)\n      end\n  end\nend\n","text":"class ApplicationController < ActionController::Base\n  # Prevent CSRF attacks by raising an exception.\n  # For APIs, you may want to use :null_session instead.\n  protect_from_forgery with: :exception\n  before_action :detect_browser_os_and_device\n  before_filter :configure_permitted_parameters, if: :devise_controller?\n\n  protected\n\n  def configure_permitted_parameters\n    devise_parameter_sanitizer.for(:sign_up) { |u| u.permit(:username, :email, :password, :password_confirmation) }\n    devise_parameter_sanitizer.for(:sign_in) { |u| u.permit(:login, :username, :email, :password) }\n    devise_parameter_sanitizer.for(:account_update) { |u| u.permit(:username, :email, :password, :password_confirmation, :current_password) }\n  end\n\n  private\n\n  def detect_browser_os_and_device\n      case request.protocol\n      when /http/i\n        request.variant = [:http]\n      when /https/i\n        request.variant = [:https]\n      end\n\n      case request.user_agent\n      when /iPad/i\n        request.variant.push(:tablet)\n      when /iPhone/i || /Windows Phone/i\n        request.variant.push(:phone)\n      when /Android/i && /mobile/i\n        request.variant.push(:phone)\n      when /Android/i\n        request.variant.push(:tablet)\n      end\n      case request.user_agent\n      when /Android/i\n        request.variant.push(:android)\n      when /iPhone/i || /iPad/i\n        request.variant.push(:ios)\n      when /Windows/i\n        request.variant.push(:windows)\n      when /Macintosh/i || /MacOS/i || /Darwin/i\n        request.variant.push(:mac)\n      when /BSD/i\n        request.variant.push(:bsd)\n      when /Linux/i || /Ubuntu/i\n        request.variant.push(:linux)\n      when /RIM/i || /Playbook/i || /BlackBerry/i || /BB10/i\n        request.variant.push(:blackberry)\n      when /CrOS/i\n        request.variant.push(:chromeos)\n      when /Firefox/i && /Mobile/i\n        request.variant.push(:firefoxos)\n      end\n      case request.user_agent\n      when /Chrome/i || /Chromium/i || /CrMo/i || /CriOS/i\n        request.variant.push(:chrome)\n      when /Firefox/i || /Fennec/i\n        request.variant.push(:firefox)\n      when /Safari/i && /Android/i\n        request.variant.push(:androidb)\n      when /Opera/i || /OPR/i || /Presto/i\n        request.variant.push(:opera)\n      when /MSIE/i || /Trident/i || /IE/i || /IEMobile/i\n        request.variant.push(:ie)\n      when /Safari/i || /iPhone/i || /iPad/i\n        request.variant.push(:safari)\n      when /RIM/i || /Playbook/i || /BlackBerry/i || /BB10/i\n        request.variant.push(:blackberryb)\n      end\n  end\nend\n","active":false,"path":"/Users/camdennarzt/Developer/Ruby/KingOfStrain/app/controllers/application_controller.rb","scroll":2,"cursor":{"row":0,"column":0}}]