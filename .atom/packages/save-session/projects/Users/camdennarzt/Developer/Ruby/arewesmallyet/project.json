[{"diskText":"require_relative \"../lib/domainredirect.rb\"\n\nclass Arewesmallyet < Padrino::Application\n  register Padrino::Rendering\n  register Padrino::Pipeline\n  register Padrino::Helpers\n  register Padrino::Cache\n\n  use Rack::DomainRedirect, [\"arewesmallyet.dev\", \"localhost\"]\n\n  disable :caching\n  disable :sessions\n  disable :flash\n  set :haml, :format => :html5\n\n  get :index, :cache => true do\n    expires 3600 * 12\n    render :index\n  end\n\n  get :data, :cache => true, provides: :json do\n    expires 3600 * 12\n    @records = Record.order(:day).map do |r|\n      {r.day.to_s => JSON.parse(r.data)}\n    end.reduce({}, :merge!)\n    @records.to_json\n  end\n\n  get \"/*\", :priority => :low do\n    redirect \"/\"\n  end\n\n  configure_assets do |config|\n    config.pipeline = Padrino::Pipeline::Sprockets\n    config.prefix = '/public'\n  end\n\n  ##\n  # Caching support\n  #\n  # register Padrino::Cache\n  # enable :caching\n  #\n  # You can customize caching store engines:\n  #\n  #   set :cache, Padrino::Cache::Store::Memcache.new(::Memcached.new('127.0.0.1:11211', :exception_retry_limit => 1))\n  #   set :cache, Padrino::Cache::Store::Memcache.new(::Dalli::Client.new('127.0.0.1:11211', :exception_retry_limit => 1))\n  #   set :cache, Padrino::Cache::Store::Redis.new(::Redis.new(:host => '127.0.0.1', :port => 6379, :db => 0))\n  #   set :cache, Padrino::Cache::Store::Memory.new(50)\n  #   set :cache, Padrino::Cache::Store::File.new(Padrino.root('tmp', app_name.to_s, 'cache')) # default choice\n  #\n\n  configure :production do\n    set :cache, Padrino::Cache::Store::Memcache.new(::Dalli::Client.new(:exception_retry_limit => 1))\n  end\n\n  ##\n  # Application configuration options\n  #\n  # set :raise_errors, true       # Raise exceptions (will stop application) (default for test)\n  # set :dump_errors, true        # Exception backtraces are written to STDERR (default for production/development)\n  # set :show_exceptions, true    # Shows a stack trace in browser (default for development)\n  # set :logging, true            # Logging in STDOUT for development and file for production (default only for development)\n  # set :public_folder, \"foo/bar\" # Location for static assets (default root/public)\n  # set :reload, false            # Reload application files (default in development)\n  # set :default_builder, \"foo\"   # Set a custom form builder (default 'StandardFormBuilder')\n  # set :locale_path, \"bar\"       # Set path for I18n translations (default your_app/locales)\n  # disable :sessions             # Disabled sessions by default (enable if needed)\n  # disable :flash                # Disables sinatra-flash (enabled by default if Sinatra::Flash is defined)\n  # layout  :my_layout            # Layout can be in views/layouts/foo.ext or views/foo.ext (default :application)\n  #\n\n  ##\n  # You can configure for a specified environment like:\n  #\n  #   configure :development do\n  #     set :foo, :bar\n  #     disable :asset_stamp # no asset timestamping for dev\n  #   end\n  #\n\n  ##\n  # You can manage errors like:\n  #\n  #   error 404 do\n  #     render 'errors/404'\n  #   end\n  #\n  #   error 505 do\n  #     render 'errors/505'\n  #   end\n  #\nend\n","text":"require_relative \"../lib/domainredirect.rb\"\n\nclass Arewesmallyet < Padrino::Application\n  register Padrino::Rendering\n  register Padrino::Pipeline\n  register Padrino::Helpers\n  register Padrino::Cache\n\n  use Rack::DomainRedirect, [\"arewesmallyet.dev\", \"localhost\"]\n\n  disable :caching\n  disable :sessions\n  disable :flash\n  set :haml, :format => :html5\n\n  get :index, :cache => true do\n    expires 3600 * 12\n    render :index\n  end\n\n  get :data, :cache => true, provides: :json do\n    expires 3600 * 12\n    @records = Record.order(:day).map do |r|\n      {r.day.to_s => JSON.parse(r.data)}\n    end.reduce({}, :merge!)\n    @records.to_json\n  end\n\n  get \"/*\", :priority => :low do\n    redirect \"/\"\n  end\n\n  configure_assets do |config|\n    config.pipeline = Padrino::Pipeline::Sprockets\n    config.prefix = '/public'\n  end\n\n  ##\n  # Caching support\n  #\n  # register Padrino::Cache\n  # enable :caching\n  #\n  # You can customize caching store engines:\n  #\n  #   set :cache, Padrino::Cache::Store::Memcache.new(::Memcached.new('127.0.0.1:11211', :exception_retry_limit => 1))\n  #   set :cache, Padrino::Cache::Store::Memcache.new(::Dalli::Client.new('127.0.0.1:11211', :exception_retry_limit => 1))\n  #   set :cache, Padrino::Cache::Store::Redis.new(::Redis.new(:host => '127.0.0.1', :port => 6379, :db => 0))\n  #   set :cache, Padrino::Cache::Store::Memory.new(50)\n  #   set :cache, Padrino::Cache::Store::File.new(Padrino.root('tmp', app_name.to_s, 'cache')) # default choice\n  #\n\n  configure :production do\n    set :cache, Padrino::Cache::Store::Memcache.new(::Dalli::Client.new(:exception_retry_limit => 1))\n  end\n\n  ##\n  # Application configuration options\n  #\n  # set :raise_errors, true       # Raise exceptions (will stop application) (default for test)\n  # set :dump_errors, true        # Exception backtraces are written to STDERR (default for production/development)\n  # set :show_exceptions, true    # Shows a stack trace in browser (default for development)\n  # set :logging, true            # Logging in STDOUT for development and file for production (default only for development)\n  # set :public_folder, \"foo/bar\" # Location for static assets (default root/public)\n  # set :reload, false            # Reload application files (default in development)\n  # set :default_builder, \"foo\"   # Set a custom form builder (default 'StandardFormBuilder')\n  # set :locale_path, \"bar\"       # Set path for I18n translations (default your_app/locales)\n  # disable :sessions             # Disabled sessions by default (enable if needed)\n  # disable :flash                # Disables sinatra-flash (enabled by default if Sinatra::Flash is defined)\n  # layout  :my_layout            # Layout can be in views/layouts/foo.ext or views/foo.ext (default :application)\n  #\n\n  ##\n  # You can configure for a specified environment like:\n  #\n  #   configure :development do\n  #     set :foo, :bar\n  #     disable :asset_stamp # no asset timestamping for dev\n  #   end\n  #\n\n  ##\n  # You can manage errors like:\n  #\n  #   error 404 do\n  #     render 'errors/404'\n  #   end\n  #\n  #   error 505 do\n  #     render 'errors/505'\n  #   end\n  #\nend\n","active":false,"path":"/Users/camdennarzt/Developer/Ruby/arewesmallyet/app/app.rb","scroll":2,"cursor":{"row":16,"column":21}}]