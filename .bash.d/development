# no shebang

if JAVA_HOME=$(/usr/libexec/java_home 2>/dev/null); then
    export JAVA_HOME
    export MANPATH="$JAVA_HOME/man:$MANPATH"
fi
export NODE_REPL_HISTORY="$HOME/.history/node"
export SQLITE_HISTORY="$HOME/.history/sqlite"
export GIT_CEILING_DIRECTORIES=/Users
export DOCKER_SCAN_SUGGEST=false
export DOTNET_GENERATE_ASPNET_CERTIFICATE=false

if [ "$(uname)" = "Darwin" ]; then
    SDKROOT=$(xcrun -sdk macosx --show-sdk-path)
    export SDKROOT
    #MACOSX_DEPLOYMENT_TARGET=$(xcrun -sdk macosx --show-sdk-platform-version)
    if [[ $(uname -m) == 'arm64' ]]; then
        # https://andreasfertig.blog/2021/02/clang-and-gcc-on-macos-catalina-finding-the-include-paths/
        export CPATH=/opt/homebrew/include
        export LIBRARY_PATH=/opt/homebrew/lib
        export LD_LIBRARY_PATH=$LIBRARY_PATH
    fi

    eval "$(brew shellenv)"
    export HOMEBREW_INSTALL_BADGE=üç∑
    export HOMEBREW_AUTO_UPDATE_SECS=86400
    export HOMEBREW_NO_INSTALL_CLEANUP="Fuck off"
    export HOMEBREW_NO_ANALYTICS="Fuck off, seriously"
    export HOMEBREW_CACHE="$HOME/Library/Caches/Homebrew/"
    export HOMEBREW_UPDATE_TO_TAG="Homebrew devs suck"
    # export HOMEBREW_BUILD_FROM_SOURCE="Fuck off, forever"
    export HOMEBREW_BUNDLE_FILE="$HOME/Developer/Bash/dot-files/homebrew/Brewfile"
    export HOMEBREW_NO_BOTTLE_SOURCE_FALLBACK="fuck you"
    export HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK="rebuilding llvm for no reason? fuck you"
    HOMEBREW_BUNDLE_BREW_SKIP="$(grep -F ignore-dependencies "$HOMEBREW_BUNDLE_FILE" | awk '{print $2}' | tr -d '",')"
    export HOMEBREW_BUNDLE_BREW_SKIP
    export HOMEBREW_EVAL_ALL="lazy, cheap, fucking, asswipes"
    export HOMEBREW_USE_RUBY_FROM_PATH=1
    set -a
    # shellcheck disable=SC1090
    source <(gpg --quiet --decrypt ~/.bash.d/secrets.gpg)
    set +a

    if command -v rbenv > /dev/null; then
        RUBY_CONFIGURE_OPTS="--with-openssl-dir=$(brew --prefix openssl@3) --enable-yjit"
        export RUBY_CONFIGURE_OPTS
        export RUBY_YJIT_ENABLE=1
        eval "$(rbenv init -)";
    fi

    function project {
        if [ "$1" = 'size' ]; then
            find . -type f \( -iname '*.h' -o -name '*.m' -o -name '*.pch' \) -print0 | xargs -0 wc -l | sort -nr
        elif [ "$1" = 'build' ]; then
            xcodebuild
        elif [ "$1" = 'info' ]; then
            xcodebuild -list
        fi
    }

    export GOPATH=~/Developer/Go
    export GOROOT=/usr/local/opt/go/libexec
    PATH="$PATH:$(ls -d "$HOME"/Library/Python/*/bin | paste -s -d ':' -)"
    PATH=$PATH:$GOPATH/bin
    export PATH=$PATH:$GOROOT/bin
    if [ -f ~/.cargo/env ]; then
        source ~/.cargo/env
    fi
fi
