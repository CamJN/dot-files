#!/bin/bash

# man pppd

# exec > /tmp/ip-down.log
# exec 2>&1
# /usr/bin/env

# Arg |       name        | example value
# 1   │ interface-name    | ppp0
# 2   │ tty-device        |
# 3   │ speed             | 0
# 4   │ local-IP-address  | 10.0.2.3
# 5   │ remote-IP-address | 10.255.255.0
# 6   │ ipparam           | 10.0.1.1

# DEVICE     The name of the serial tty device being used.
# IFNAME     The name of the network interface being used.
# IPLOCAL    The IP address for the local end of the link.  This is only set when IPCP has come up.
# IPREMOTE   The IP address for the remote end of the link.  This is only set when IPCP has come up.
# PEERNAME   The authenticated name of the peer.  This is only set if the peer authenticates itself.
# SPEED      The baud rate of the tty device.
# ORIG_UID   The real user-id of the user who invoked pppd.
# PPPLOGNAME The username of the real user-id that invoked pppd. This is always set.
# CONNECT_TIME  The number of seconds from when the PPP negotiation started until the connection was terminated.
# BYTES_SENT    The number of bytes sent (at the level of the serial port) during the connection.
# BYTES_RCVD    The number of bytes received (at the level of the serial port) during the connection.
# LINKNAME      The logical name of the link, set with the linkname option.
# DNS1          If the peer supplies DNS server addresses, this variable is set to the first DNS server address supplied.
# DNS2          If the peer supplies DNS server addresses, this variable is set to the second DNS server address supplied.


if [ ${1:-empty} = 'ppp0' ]; then
    # for ip in 201 204; do
    #     /sbin/route delete -host 10.9.8.$ip -interface $1
    # done
    /sbin/route delete -net 10.9.8.0/24 -interface $1
fi
