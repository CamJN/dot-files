#!/usr/bin/env -P /usr/local/bin:/opt/homebrew/bin bash

# ref: https://github.com/develerik/git-credential-1password

source ~/.bash.d/functions

local protocol='';
local host='';
local username='';
local password='';
local path='';
local url='';

while read line; do
    case $line in
        protocol=*)
            protocol=${line#protocol=}
            ;;
        host=*)
            host=${line#host=}
            ;;
        username=*)
            username=${line#username=}
            ;;
        password=*)
            password=${line#password=}
            ;;
        path=*)
            path=${line#path=}
            ;;
        url=*)
            url=${line#url=}
            ;;
        *)
            echo "unknown key: $line" >>/dev/stderr
            exit 1;;
    esac
done

case $1 in
    get)
        #For a get operation, the helper should produce a list of attributes on stdout in the same format. A helper is free to produce a subset, or even no values at all if it has nothing useful to provide. Any provided attributes will overwrite those already known about by Git. If a helper outputs a quit attribute with a value of true or 1, no further helpers will be consulted, nor will the user be prompted (if no credential has been provided, the operation will then fail).
        echo "password=$(getPasswordFor $host)"
        ;;
    erase)
        #For a store or erase operation, the helper's output is ignored. If it fails to perform the requested operation, it may complain to stderr to inform the user. If it does not support the requested operation (e.g., a read-only store), it should silently ignore the request.
        exit;;
    store)
        #The details of the credential will be provided on the helper's stdin stream.
        #format: https://git-scm.com/docs/git-credential#IOFMT
        exit;;
    *)
        echo "unknown operation: $1" >>/dev/stderr
        #If a helper receives any other operation, it should silently ignore the request. This leaves room for future operations to be added (older helpers will just ignore the new requests).
        exit 1;;
esac
