#!/usr/local/bin/bash

declare -i last_called=0
declare -i throttle_by=1
declare -i parallel=1
declare script=/usr/local/etc/netwatchrc

while getopts "h?c:p" opt; do
    case "$opt" in
        h|\?)
            echo "Use: $0 [-h][-?] [-p] [-c /path/to/script]"
            exit 0
            ;;
        c)  script="$OPTARG"
            ;;
        p)  parallel=0
            throttle_by=0
            ;;
    esac
done

function throttle () {
    while read -r line; do
        current_time=$(date +%s)
        if (( current_time > last_called )); then
            echo -e "${line}"
            last_called=$((current_time + throttle_by))
        fi
    done
}

[ -p netwatch_pipe ] && rm netwatch_pipe
mkfifo netwatch_pipe

( scutil < netwatch_pipe | grep -Fe notification --line-buffered | throttle | xargs -L 1 -P $parallel "$script" ) &

exec 3>netwatch_pipe # open file descriptor 3 writing to the pipe

#echo -e "n.add State:/Network/Global/IPv4\nn.watch" > netwatch_pipe
echo 'n.add State:/Network/Global/IPv. "IPv."' > netwatch_pipe
echo "n.watch" > netwatch_pipe

trap "rm netwatch_pipe" TERM

wait
